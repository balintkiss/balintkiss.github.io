// === Szenzor adatainak friss√≠t√©se ===
async function fetchData() {
    try {
      const response = await fetch('https://api.thingspeak.com/channels/2875631/feeds.json?results=1');
      const data = await response.json();
      const lastEntry = data.feeds[0];
  
      const temp = parseFloat(lastEntry.field1);
      const humidity = parseFloat(lastEntry.field2);
  
      document.getElementById('temperature').innerText = temp + " ¬∞C";
      document.getElementById('humidity').innerText = humidity + " %";
  
      let overallStatus = "";
      let statusClass = "normal";
  
      if (temp > 30) {
        overallStatus += "üî• Meleg van! ";
        statusClass = "high";
      } else if (temp < 18) {
        overallStatus += "‚ùÑÔ∏è Hideg van! ";
        statusClass = "low";
      }
  
      if (humidity > 60) {
        overallStatus += "üí¶ Magas a p√°ratartalom! ";
        statusClass = "high";
      } else if (humidity < 30) {
        overallStatus += "üí® Sz√°raz a leveg≈ë! ";
        statusClass = "low";
      }
  
      if (overallStatus === "") {
        overallStatus = '<i class="fas fa-circle-check" style="color: lightgreen;"></i> Megfelel≈ë k√∂rnyezet';
        statusClass = "normal";
      }
  
      document.getElementById("overall-status").innerHTML = overallStatus;
      document.getElementById("overall-status").className = "status " + statusClass;
    } catch (error) {
      console.error("Error fetching data:", error);
    }
  }
  setInterval(fetchData, 5000);
  fetchData();
  
  // === "Tov√°bb" gombhoz tartoz√≥ toggleCharts f√ºggv√©ny ===
  function toggleCharts() {
    const chartsDiv = document.getElementById("charts");
    const button = document.querySelector(".more-btn");
  
    if (chartsDiv.style.display === "none" || chartsDiv.style.display === "") {
      chartsDiv.style.display = "block";
      chartsDiv.style.opacity = "0";
      setTimeout(() => {
        chartsDiv.style.opacity = "1";
      }, 50);
      button.innerHTML = '<i class="fas fa-times"></i> Bez√°r';
    } else {
      chartsDiv.style.opacity = "0";
      setTimeout(() => {
        chartsDiv.style.display = "none";
      }, 300);
      button.innerHTML = '<i class="fas fa-chart-line"></i> Tov√°bb';
    }
  }
  
  // === Admin modal, login √©s panel kezel√©se ===
  function openAdminModal() {
    document.getElementById('adminModal').style.display = 'block';
    renderModalContent();
  }
  function closeAdminModal() {
    document.getElementById('adminModal').style.display = 'none';
  }
  function renderModalContent() {
    const modalBody = document.getElementById('modal-body');
    // Ha az admin m√°r be van jelentkezve, az admin panel jelenjen meg,
    // k√ºl√∂nben a login ≈±rlap, mely fetch h√≠v√°ssal a szerver /login v√©gponthoz k√ºld.
    if (sessionStorage.getItem('admin') === 'true') {
      modalBody.innerHTML = `
        <h2>Admin Panel</h2>
        <div class="smart-plug-toggle">
          <label class="switch">
            <input type="checkbox" id="smartPlugToggle" onchange="toggleSmartPlug(this.checked)">
            <span class="slider"></span>
          </label>
          <span id="smartPlugStatus">Ki</span>
        </div>
      `;
    } else {
      modalBody.innerHTML = `
        <h2>Admin bejelentkez√©s</h2>
        <form id="modalLoginForm">
          <input type="text" id="modalUsername" placeholder="Felhaszn√°l√≥n√©v" required>
          <input type="password" id="modalPassword" placeholder="Jelsz√≥" required>
          <button type="submit">Bejelentkez√©s</button>
          <div class="error" id="modalError"></div>
        </form>
      `;
      document.getElementById('modalLoginForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const username = document.getElementById('modalUsername').value;
        const password = document.getElementById('modalPassword').value;
        
        // K√ºld√©s a szerver /login v√©gponthoz (HTTPS, cookie-k tov√°bb√≠t√°sa)
        fetch('https://balintkiss-github-io.onrender.com/login', {  // Cser√©ld ki a saj√°t szerver URL-edre!
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          credentials: 'include',
          body: JSON.stringify({ username, password })
        })
        .then(response => response.json())
        .then(data => {
          if (data.message === 'Sikeres bejelentkez√©s') {
            sessionStorage.setItem('admin', 'true');
            renderModalContent(); // √öjra renderelj√ºk az admin panelt
          } else {
            document.getElementById('modalError').textContent = data.message || 'Hiba t√∂rt√©nt a bejelentkez√©s sor√°n.';
          }
        })
        .catch(error => {
          console.error('Hiba a bejelentkez√©s sor√°n:', error);
          document.getElementById('modalError').textContent = 'Hiba t√∂rt√©nt a bejelentkez√©s sor√°n.';
        });
      });
    }
  }
  
  // === Smart Plug Toggle kapcsol√≥ kezel√©se ===
  function toggleSmartPlug(isOn) {
    document.getElementById('smartPlugStatus').innerText = isOn ? "Be" : "Ki";
    // P√©ldak√©nt k√ºld√ºnk egy POST k√©r√©st a szervernek a smart plug v√°lt√°s√°hoz.
    // Cser√©ld ki az URL-t a saj√°t API v√©gpontodra!
    fetch('https://balintkiss-github-io.onrender.com/api/smartplug', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ state: isOn ? "on" : "off" })
    })
    .then(response => response.json())
    .then(data => {
      console.log("Smart plug v√°lasz:", data);
    })
    .catch(error => console.error("Hiba a smart plug v√°lt√°sakor:", error));
  }
  
  // Z√°rja a mod√°lt, ha a modal-contenton k√≠v√ºlre kattintanak
  window.onclick = function(event) {
    const modal = document.getElementById('adminModal');
    if (event.target === modal) {
      closeAdminModal();
    }
  }
  